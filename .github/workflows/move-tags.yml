# -----------------------------------------------------------------------------------------------
# This workflow moves git tags to match with the latest releases and promotions (similar to ECR)
#   Reason: AWS CodeBuild can only check out source code by a predefined tag/commit/branch/hash
# -----------------------------------------------------------------------------------------------
# Enables our promotion pipelines to check out the correct release commit
#   in order to package and deploy the AWS CDK Lambdas from the relevant release.
# -----------------------------------------------------------------------------------------------

name: Move Environment Tags

on:
  workflow_run:
    workflows: [Release, Promote TAG Workflow]
    types: [completed]

env:
  GITHUB_TOKEN: ${{github.token}}

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Is Release or Promotion
        uses: actions/github-script@v6
        id: is-promotion
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
             return artifact.name == "promoted_to"
            })[0];
            
            return matchArtifact?.id;
          result-encoding: string


      - name: Download artifact
        uses: actions/github-script@v6
        with:
          script: |
            let download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: ${{steps.is-promotion.outputs.result}},
              archive_format: 'zip'  
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/promoted_to.zip`, Buffer.from(download.data)); 

      - name: Unzip Artifact
        run: unzip promoted_to.zip

      - name: Set promoted_to
        id: set-result
        uses: actions/github-script@v6
        with:
          script: |
            let fs = require('fs');
            let promoted_to = String(fs.readFileSync('./promoted_to'));
            return promoted_to;
          result-encoding: string

      - name: Move or Apply Tag
        run: |
          PROMOTED_TO=$(echo "${{steps.set-result.outputs.result}}" | tr -d '\r')
          
          if [[ -z "$PROMOTED_TO" ]]; then
            
            echo "PROMOTED_TO is not set"'
          
          else
            echo "Checking for an existing ${PROMOTED_TO} tag"
          
            if git rev-parse -q --verify "refs/tags/${PROMOTED_TO}" >/dev/null; then
              echo "Found an existing ${PROMOTED_TO} tag"
              git tag -d ${PROMOTED_TO}
              git push origin --delete ${PROMOTED_TO}
            fi
          
            echo "Applying the ${PROMOTED_TO} tag" 
            git tag ${PROMOTED_TO}
            git push origin ${PROMOTED_TO}
          
          fi

        shell: bash

  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
